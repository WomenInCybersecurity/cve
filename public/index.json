[{"content":"👋 About Me Hey there! I’m an Application Security Engineer focused on making sure the apps we all use are safe and secure 🛡️. I work closely with development teams to find and fix security issues—whether it’s through vulnerability assessments, penetration testing, or helping build security into the software development process from the start 🧑‍💻🔐.\nI’ve done everything from digging into source code with tools like Snyk, Checkmarx, Veracode, and Fortify 🧩, to running hands-on web app penetration tests 🕵️‍♂️. I also focus a lot on integrating security into CI/CD pipelines ⚙️ and making sure teams have the tools and knowledge to build secure software every step of the way 🛠️.\nThis blog is my space to share what I’ve learned (and am still learning!) about AppSec, DevSecOps, CVE analysis 🧠, and the tools that make it all happen—like Burp Suite, Nmap, and others I use during pentests 🧪. If you’re into secure coding, threat modeling, or just curious about how security fits into software development—you’re in the right place 👨‍🏫🚀.\n","permalink":"https://cve.blog/about/","summary":"\u003ch2 id=\"-about-me\"\u003e👋 About Me\u003c/h2\u003e\n\u003cp\u003eHey there! I’m an Application Security Engineer focused on making sure the apps we all use are safe and secure 🛡️. I work closely with development teams to find and fix security issues—whether it’s through vulnerability assessments, penetration testing, or helping build security into the software development process from the start 🧑‍💻🔐.\u003c/p\u003e\n\u003cp\u003eI’ve done everything from digging into source code with tools like Snyk, Checkmarx, Veracode, and Fortify 🧩, to running hands-on web app penetration tests 🕵️‍♂️. I also focus a lot on integrating security into CI/CD pipelines ⚙️ and making sure teams have the tools and knowledge to build secure software every step of the way 🛠️.\u003c/p\u003e","title":""},{"content":"📝 Posts Content is brewing\u0026hellip; ☕\nStay tuned for write-ups on Pen Testing, Threat Hunting, and AI in Security.\n🚧 Coming Soon 🔍 Deep dives into real-world penetration testing scenarios 🕵️ Threat hunting techniques and case studies 🤖 AI + cybersecurity experiments and insights 🧩 Creative exploits and unexpected tech twists 📅 First posts dropping soon — get ready to follow the trail through the shadows of cyberspace! 🌒\n","permalink":"https://cve.blog/coming-soon/","summary":"\u003ch1 id=\"-posts\"\u003e📝 Posts\u003c/h1\u003e\n\u003cp\u003eContent is brewing\u0026hellip; ☕\u003cbr\u003e\nStay tuned for write-ups on \u003cstrong\u003ePen Testing\u003c/strong\u003e, \u003cstrong\u003eThreat Hunting\u003c/strong\u003e, and \u003cstrong\u003eAI in Security\u003c/strong\u003e.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-coming-soon\"\u003e🚧 Coming Soon\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e🔍 Deep dives into real-world penetration testing scenarios\u003c/li\u003e\n\u003cli\u003e🕵️ Threat hunting techniques and case studies\u003c/li\u003e\n\u003cli\u003e🤖 AI + cybersecurity experiments and insights\u003c/li\u003e\n\u003cli\u003e🧩 Creative exploits and unexpected tech twists\u003c/li\u003e\n\u003c/ul\u003e\n\u003chr\u003e\n\u003cp\u003e📅 First posts dropping soon — get ready to follow the trail through the shadows of cyberspace! 🌒\u003c/p\u003e","title":""},{"content":"📝 Posts Cooking up some content\u0026hellip; 🍳\nStay tuned for write-ups on CVE Analysis, Pen Testing Tools, and more 🔍🛠️.\n📅 First posts dropping soon — gear up to follow the signal through the noise of cyberspace! 🌐✨\n","permalink":"https://cve.blog/posts/coming-soon/","summary":"\u003ch1 id=\"-posts\"\u003e📝 Posts\u003c/h1\u003e\n\u003cp\u003eCooking up some content\u0026hellip; 🍳\u003cbr\u003e\nStay tuned for write-ups on \u003cstrong\u003eCVE Analysis\u003c/strong\u003e, \u003cstrong\u003ePen Testing Tools\u003c/strong\u003e, and more 🔍🛠️.\u003c/p\u003e\n\u003chr\u003e\n\u003cp\u003e📅 First posts dropping soon — gear up to follow the signal through the noise of cyberspace! 🌐✨\u003c/p\u003e","title":""},{"content":"🛡️ Getting Started with Secure Software Development Life Cycle (SSDLC) – A Simple Guide Have you ever built something only to realize at the very end that something really important was missing? That’s what happens when security is added at the last minute in software development. In today’s world, where data breaches and cyberattacks are on the rise, we can\u0026rsquo;t afford to treat security like an afterthought. That’s where Secure SDLC comes in.\nLet’s break it down.\n🔄 What Is SDLC? SDLC stands for Software Development Life Cycle. It’s basically a roadmap for building software — step by step. The main stages usually look like this:\nPlanning and Requirements – What do we need to build?\nDesign – How will it work?\nDevelopment – Let’s write the code.\nTesting – Does it actually work?\nDeployment – Ship it!\nMaintenance – Fix and update as needed.\nTraditionally, security checks only happen during testing — pretty late in the game. But by then, fixing issues can be expensive, time-consuming, or even too late.\n🔐 What Is Secure SDLC? Secure SDLC means adding security at every step of the software development process — not just at the end. Instead of waiting until something breaks or gets hacked, we think about potential risks early and often.\nThis approach helps catch security issues before they become real problems, saving time, money, and your reputation.\n✅ What Does Secure SDLC Look Like? Let’s walk through how each stage changes when you build software securely:\n1. 📝 Planning and Requirements Think about what kind of data you\u0026rsquo;re handling (passwords, credit cards, personal info).\nList down any security rules you need to follow (like GDPR, HIPAA, etc.).\nAsk: “What could go wrong?” right from the start.\n2. 🧠 Design Plan for security up front — use safe design patterns.\nTry out threat modeling (fancy term, but it just means brainstorming possible attacks before they happen).\nAvoid common security flaws by thinking through the structure of your app.\n3. 💻 Development Write code with best practices in mind (use the OWASP Top 10 as a guide).\nAvoid hardcoding secrets like passwords or API keys.\nUse tools to automatically check your code for security bugs.\n4. 🧪 Testing Go beyond regular testing — use tools that simulate real attacks.\nDo penetration testing (hire ethical hackers or use tools that act like them).\nMake sure known vulnerabilities are patched.\n5. 🚀 Deployment Double-check that everything is securely configured (servers, firewalls, databases).\nUse automation to prevent human errors.\nStore secrets (like tokens and credentials) safely — not in plain text!\n6. 🔁 Maintenance Keep your software and libraries up to date — old versions are often vulnerable.\nMonitor your app for unusual behavior.\nKeep reviewing and improving your security posture.\n💡 Why Does Secure SDLC Matter? Because security is everyone’s job, not just the security team’s. Here’s what you gain:\nFewer security issues in production.\nFaster and cheaper fixes.\nPeace of mind that your users’ data is safe.\nCompliance with laws and industry standards.\n🛠️ Tools That Can Help Some popular tools teams use in Secure SDLC include:\nStatic Code Analysis: SonarQube, Checkmarx\nDependency Scanning: Snyk, OWASP Dependency-Check\nDynamic Testing: Burp Suite, OWASP ZAP\nSecrets Detection: GitGuardian, TruffleHog\n🙌 Wrapping Up Security isn’t just a checkbox. It’s something you bake into your process from the beginning. By following a Secure SDLC approach, you make your software safer, stronger, and smarter.\nEven if you\u0026rsquo;re just getting started — small changes in how you write and review code can make a big difference.\n","permalink":"https://cve.blog/posts/ssdlcpost/","summary":"\u003ch2 id=\"-getting-started-with-secure-software-development-life-cycle-ssdlc---a-simple-guide\"\u003e🛡️ Getting Started with Secure Software Development Life Cycle (SSDLC)  – A Simple Guide\u003c/h2\u003e\n\u003cp\u003eHave you ever built something only to realize at the very end that something really important was missing? That’s what happens when security is added at the last minute in software development. In today’s world, where data breaches and cyberattacks are on the rise, we can\u0026rsquo;t afford to treat security like an afterthought. That’s where \u003cstrong\u003eSecure SDLC\u003c/strong\u003e comes in.\u003c/p\u003e","title":""},{"content":"We collect usage data using Google Analytics for the purposes of visualizing the traffic on this website.\nAll data is anonymized and we do not sell or share any data with third parties.\nIf you choose to deny, no info will be collected whatsoever.\n","permalink":"https://cve.blog/privacy/","summary":"\u003cp\u003eWe collect usage data using Google Analytics for the purposes of visualizing the traffic on this website.\u003c/p\u003e\n\u003cp\u003eAll data is anonymized and we do not sell or share any data with third parties.\u003c/p\u003e\n\u003cp\u003eIf you choose to deny, no info will be collected whatsoever.\u003c/p\u003e","title":""}]